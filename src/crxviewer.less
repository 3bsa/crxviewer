/* (c) 2013 Rob Wu <rob@robwu.nl> */
@rightPanelWidth: 250px;
@resizerWidth: 8px;
@fileSizeWidth: 4rem;
@fileSpecificToolbarHeight: 2rem;

* {
    box-sizing: border-box;
}
html, body {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
}
body {
    font-family: "Segoe UI", "Lucida Grande", Tahoma, sans-serif;
    font-size: 100%;
}
#top-bar {
    @fileFilterWidth: 300px;
    @barPadding: 0.2rem;
    display: -webkit-flex;
    display: flex;
    width: 100%;
    height: 2rem;
    border-bottom: 2px solid #DDD;
    padding: @barPadding;

    // On small screens the togglers may overflow to the next line.
    // Make sure that they are visible if the user interacts with the top bar.
    &:hover {
        position: relative;
        z-index: 10;
    }

    #file-filter {
        vertical-align: middle;
        width: @fileFilterWidth;
        max-width: 100%;
        height: 1.4rem;
        border: 1px solid #AAA;
        padding: 3px;
        color: #444;
        &:focus {
            outline: none;
            border-color: rgb(77, 144, 254);
        }
        &.invalid {
            background-color: #FEE;
            & ~ label {
                // Require the user to fix the regex before using the checkboxes
                display: none;
            }
        }
    }
    label {
        vertical-align: middle;
        display: -webkit-inline-flex;
        display: inline-flex;
        -webkit-flex-wrap: wrap;
        flex-wrap: wrap;
        // This weird play with negative margins is to make sure that there is some
        // visible padding when the labels overflow to the next line.
        margin: -0.1rem 0;
        padding: 0.1rem 3px;
        background: white;
        height: 1.8rem;
        // ^^^ = 2 * 0.1 (padding) + 0.8 (description) + 0.8 (checkbox/counter) = 1.8rem.

        &:hover {
            outline: 1px solid rgba(0, 0, 0, 0.2);
        }

        // The meaning of the checkbox, displayed above the checkbox.
        .filter-label-description {
            -webkit-flex: 0 0 100%;
            flex: 0 0 100%;
            order: 1;
            font-size: 0.7rem;
            height: 0.8rem;
        }

        // Below the label description, checkbox at the left,
        // file counter at the right (gcount is inserted by JS).
        input[data-filter-type],
        .gcount {
            -webkit-flex: 0 0 auto;
            flex: 0 0 auto;
            order: 2;
            margin: 0;
            font-size: 0.7rem;
            height: 0.8rem;
        }

        input[data-filter-type] {
        }

        .gcount {
            // Set a very small width so that the flex label does not get too wide.
            // It is not zero so that the counter always has some size.
            padding-left: 2px;
            width: 2px;
        }
    }
    #file-filter-feedback {
        -webkit-flex: 1;
        flex: 1;
    }
    & > a[href] {
        margin: 0 5px;
    }
    & > a:not([href]) {
        display: none;
    }
}

#advanced-open, #right-panel, #left-panel {
    height: -webkit-calc(100% - 2rem);
    height: calc(100% - 2rem);
}
#advanced-open {
    display: none;
    text-align: center;
    padding: 2rem 1rem 0;

    &.visible {
        & ~ #right-panel, & ~ #left-panel {
            display: none;
        }
        display: block;
    }
    input {
        padding: 0.5rem;
    }
}
#advanced-open-form {
    input[type=url] {
        display: block;
        width: 90%;
        margin: 0.3rem 5%;
    }
}
#advanced-open-cws-extension {
    display: inline-block;
    text-align: left;
    padding: 1rem;
    transition: opacity 0.2s;

    &.disabled-cws:not(:hover):not(.focused-form) {
        opacity: 0.3;
        input:invalid {
            outline: none;
        }
    }

    .labeltext {
        display: inline-block;
        width: 16ch;
    }
    > div:hover {
        background-color: #F5F5F5;
    }
    label, input[type=text] {
        display: inline-block;
        padding: 0.5rem;
    }
    label {
        &:hover, &:active {
            background-color: #ddd;
        }
    }
    input[type=text] {
        // Fit at least the extension ID (32 chars) and browser version (max 24 chars)
        width: 64ch;
    }
    input:invalid {
        outline: auto red
    }
}
#right-panel {
    padding-left: (2 * @resizerWidth + @rightPanelWidth);
}
#left-panel {
    z-index: 1;
    position: absolute;
    display: inline-block;
    width: @rightPanelWidth;
    background-color: #FFF;
    & > .content {
        overflow-y: auto;
        max-height: 100%;
    }
    & > .resizer {
        height: 100%;
        position: absolute;
        top: 0;
        right: -@resizerWidth;
        width: @resizerWidth;
        background-color: #DDD;
        cursor: col-resize;
        &:hover {
            background-color: #AAA;
        }
    }
}
#initial-status {
    white-space: pre-wrap;
    word-wrap: break-word;
    text-align: center;
    progress {
        width: 300px;
        max-width: 100%;
    }
}
.toggled {
    width: 0 !important;
    & > .content {
        display: none;
    }
}
.toggled + .toggleable {
    // Override inline declaration
    padding-left: (2 * @resizerWidth) !important;
}
.toggler {
    @triangleWidth: @resizerWidth;
    cursor: pointer;
    // Triangle:
    width: 0;
    height: 0;
    border: 10px solid transparent;
    border-left: 0;
    border-right: @triangleWidth solid rgba(0,0,0,0.5);
    &:hover {
        border-right-color: #000;
    }
    .toggled & {
        border-left: @triangleWidth solid black;
        border-right: 0;
    }
}
#file-list {
    margin: 0;
    padding: 0;
    list-style-type: none;

    &.gfilter-images    li.gtype-images,
    &.gfilter-code      li.gtype-code,
    &.gfilter-markup    li.gtype-markup,
    &.gfilter-locales   li.gtype-locales,
    &.gfilter-misc      li.gtype-misc,
    li.file-filtered, li.grep-no-match {
        display: none;
    }
    li.grep-unknown {
        opacity: 0.5;
    }
    li {
        position: relative;
        overflow-x: hidden;
        cursor: default;
        &:hover {
            background-color: rgba(99,99,99,0.2);
        }
        &.active {
            background-color: rgba(99,99,99,0.3);
        }
        &.file-selected {
            background-color: #def;
        }

        .file-path {
            position: absolute;
            min-width: 100%;
            box-sizing: border-box;
            padding-left: @fileSizeWidth;
            right: @fileSizeWidth;
            white-space: pre;

            .file-dir {
                color: #888;
                &:hover {
                    color: #000;
                }
            }
        }
        .file-size {
            width: @fileSizeWidth;
            float: right;
            text-align: right;
        }
    }
}

#source-toolbar {
    height: @fileSpecificToolbarHeight;
    line-height: @fileSpecificToolbarHeight;
}
#source-code {
    max-height: calc(100% - @fileSpecificToolbarHeight);
    overflow: auto;
    font-family: monospace;
    white-space: pre;
    -moz-tab-size: 2;
    tab-size: 2;

    .auto-wordwrap {
        white-space: pre-wrap;
        word-break: break-all;
    }
}

.file-specific-toolbar {
    button {
        margin: 0 0.1rem;
    }
}
.file-specific-download-link {
    &:not([href]) {
        cursor: pointer;
        border-bottom: 1px dotted;
        &:hover {
            border-bottom-style: solid;
        }
    }
}

@import (less) "search-tools.less";
